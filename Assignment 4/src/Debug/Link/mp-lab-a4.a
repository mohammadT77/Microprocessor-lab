;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/9/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;static unsigned int timer_counter = 0;
;
;void timer_procedure(){
; 0000 001C void timer_procedure(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001D     PORTA ^= 0xFF;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 001E }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0021 {
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0022     TCNT0=0x83;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0023     timer_counter++;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0024     if (timer_counter==5){
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0025         timer_procedure();
;PCODE: $00000020 VOL: 0
; 0000 0026         timer_counter = 0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0027     }
; 0000 0028 
; 0000 0029 }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;
;void main(void)
; 0000 002C {
;PCODE: $00000027 VOL: 0
; 0000 002D 
; 0000 002E DDRA=0xFF;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002F DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0030 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (1<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0031 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0032 
; 0000 0033 
; 0000 0034 // Timer/Counter 0 initialization
; 0000 0035 // Clock source: System Clock
; 0000 0036 // Clock value: 125.000 kHz
; 0000 0037 // Mode: Normal top=0xFF
; 0000 0038 // OC0 output: Disconnected
; 0000 0039 // Timer Period: 1 ms
; 0000 003A TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (1<<CS00);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003B TCNT0=0x83;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003C OCR0=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003D 
; 0000 003E TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003F 
; 0000 0040 #asm("sei")
;PCODE: $00000038 VOL: 0
	sei
;PCODE: $00000039 VOL: 0
; 0000 0041 
; 0000 0042 while (1)
;PCODE: $0000003A VOL: 0
; 0000 0043       {
; 0000 0044       // Place your code here
; 0000 0045 
; 0000 0046       }
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0047 }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
