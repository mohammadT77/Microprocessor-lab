/*******************************************************
This program was created by the
CodeWizardAVR V3.12 Advanced
Automatic Program Generator
© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
http://www.hpinfotech.com

Project : MP-Lab Assignment 1
Version : 0
Date    : 12/7/2020
Author  : MohammadAmin Tehrani
Company : Kharazmi Uni
Comments: 


Chip type               : ATmega16
Program type            : Application
AVR Core Clock frequency: 12.000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 256
*******************************************************/

#include <mega16.h>

// Declare your global variables here
static unsigned int time_count;
const unsigned char NUM_LEDS = 8;
int active_led = -1; 
int direction = 0; // 1: left , -1: right, 0: OFF 


void toggle_leds(){
    if (direction==0)
        return;

    if (direction==1 && active_led>=NUM_LEDS-1)
        direction = -1;
    else if (direction==-1 && active_led<0)
        direction = 0;
    
    active_led += direction;
                                               
    PORTB = (active_led<NUM_LEDS && active_led>=0)?(1 << active_led):0; 
}

interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{
    TCNT0 = 0x8B;
    ++time_count;           
    
    // For 500 (50*10) ms Timer0 Tick
    if (time_count == 50){
        PORTC.0 = !PORTC.0; // Toggle PORTC.0
        toggle_leds();
        time_count = 0;
    }
}

void main(void)
{

DDRA= 0; // All input
DDRB= 0xFF; // All output

// For 10 ms - Timer0 Overflow:
TCCR0= 0b00000101 ;
TCNT0= 0x8B;

TIMSK= 1; // Enable Timer0

#asm("sei")

while (1)
      {
        if (PINA.0)
            direction = 1;
      }
}
