;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/16/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Declare your global variables here
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001F 
; 0000 0020     TCNT0=0x9C;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0021 
; 0000 0022 
; 0000 0023 
; 0000 0024 }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;void main(void)
; 0000 0027 {
;PCODE: $00000014 VOL: 0
; 0000 0028 // Declare your local variables here
; 0000 0029 
; 0000 002A DDRC= 0xFF;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002B PORTC= 0;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002C 
; 0000 002D DDRD= 0x0F;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002E PORTD= 0;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002F 
; 0000 0030 // Timer/Counter 0 initialization
; 0000 0031 // Clock source: System Clock
; 0000 0032 // Clock value: 1000.000 kHz
; 0000 0033 // Mode: Normal top=0xFF
; 0000 0034 // OC0 output: Disconnected
; 0000 0035 // Timer Period: 0.1 ms
; 0000 0036 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0037 TCNT0=0x9C;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0038 OCR0=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0039 
; 0000 003A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 003C 
; 0000 003D //MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
; 0000 003E //MCUCSR=(0<<ISC2);
; 0000 003F 
; 0000 0040 // Global enable interrupts
; 0000 0041 #asm("sei")
;PCODE: $00000025 VOL: 0
	sei
;PCODE: $00000026 VOL: 0
; 0000 0042 
; 0000 0043 while (1)
;PCODE: $00000027 VOL: 0
; 0000 0044       {
; 0000 0045       // Place your code here
; 0000 0046 
; 0000 0047       }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0048 }
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
